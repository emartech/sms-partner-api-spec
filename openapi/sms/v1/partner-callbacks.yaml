openapi: '3.0.3'
info:
  version: 0.0.1
  title: Provider callbacks
  description: |
    An SAP Emarsys SMS Partner Service allows partners to host SMS message sends that are triggered
    by an SAP Emarsys SMS campaign launch.
  contact:
    name: SAP Emarsys SMS Team
    email: team-sms@emarsys.com
x-sap-shortText: Process delivery reports and inbound messages.
servers:
  - url: https://api.emarsys.net/sms/partner/v1
paths:
  /clients/{clientId}/deliveryReports:
    post:
      summary: Send multiple delivery reports
      operationId: sendDeliveryReports
      tags: [delivery-reports]
      security:
        - oAuthAuthorization: []
      parameters:
        - $ref: './common.yaml#/components/parameters/clientIdPathParam'
      requestBody:
        description: The body of the delivery reports in JSON format
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeliveryReportBatch'
      responses:
        '202':
          description: Null response
        '400':
          description: Delivery report body schema is invalid
          content:
            application/json:
              schema:
                $ref: './common.yaml#/components/schemas/InvalidFormatErrorBatch'
        '401':
          description: Authentication failed - Invalid or missing OAuth token
        '403':
          description: Authorization failed - OAuth client ID does not belong to a registered partner
        '404':
          description: Client does not exists
        '429':
          description: Too many requests
        '5XX':
          description: Server error occurred
          content:
            application/json:
              schema:
                $ref: './common.yaml#/components/schemas/Error'
  /clients/{clientId}/inboundMessages:
    post:
      summary: Record received inbound messages
      operationId: sendInboundMessages
      tags: [inbound-messages]
      security:
        - oAuthAuthorization: []
      parameters:
        - $ref: './common.yaml#/components/parameters/clientIdPathParam'
      requestBody:
        description: The body of the inbound messages in JSON 145078 format
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InboundMessageBatch'
      responses:
        '202':
          description: Null response
        '400':
          description: Inbound message body schema is invalid. If one inbound message is wrong, all messages will be refused (the whole array from the request must be valid) and all valid messages should be resent in another request
          content:
            application/json:
              schema:
                $ref: './common.yaml#/components/schemas/InvalidFormatErrorBatch'
        '401':
          description: Authentication failed - Invalid or missing OAuth token
        '403':
          description: Authorization failed - OAuth client ID does not belong to a registered partner
        '404':
          description: Client does not exists
        '429':
          description: Too many requests
        '5XX':
          description: Server error occurred
          content:
            application/json:
              schema:
                $ref: './common.yaml#/components/schemas/Error'
components:
  schemas:
    # -- Delivery Reports
    DeliveryReport:
      allOf:
        - $ref: './common.yaml#/components/schemas/ReceivedAt'
        - $ref: './common.yaml#/components/schemas/EmarsysMessageId'
        - type: object
          properties:
            status:
              type: string
              enum: ['ACCEPTED', 'DELIVERED', 'SOFTBOUNCE', 'HARDBOUNCE', 'UNKNOWN']
              example: 'DELIVERED'
            details:
              description: 'This property can be used to provide extra details about the report'
              type: object
              example: { providerStatus: 'HARDBOUNCE', providerCode: 5001 }
            providerMessageIds:
              type: array
              items:
                type: string
                example: 'yqqKUsSSvr'
                minimum: 1
            messageParts:
              type: integer
              example: 3
              minimum: 0
          required:
            - status
    DeliveryReportError:
      allOf:
        - $ref: './common.yaml#/components/schemas/ReceivedAt'
        - $ref: './common.yaml#/components/schemas/EmarsysMessageId'
        - type: object
          properties:
            status:
              type: string
              enum: ['ERROR']
            details:
              description: 'This property can be used to provide extra details about the report'
              type: object
              example: { providerStatus: 'HARDBOUNCE', providerCode: 5001 }
            providerMessageIds:
              type: array
              items:
                type: string
                example: 'yqqKUsSSvr'
                minimum: 1
            messageParts:
              type: integer
              example: 3
              minimum: 0
            errorType:
              type: string
              enum: ['AUTHENTICATION', 'INVALID_SENDER_ID', 'INSUFFICIENT_CREDIT', 'UNKNOWN']
              example: 'AUTHENTICATION'
          required:
            - status
            - errorType
    DeliveryReportBatch:
      type: object
      properties:
        deliveryReports:
          type: array
          items:
            oneOf:
              - $ref: '#/components/schemas/DeliveryReport'
              - $ref: '#/components/schemas/DeliveryReportError'
          minimum: 1
          maximum: 1000
      required:
        - deliveryReports
    # -- Inbound Messages
    InboundMessage:
      allOf:
        - $ref: './common.yaml#/components/schemas/IdentifiableMessage'
        - $ref: './common.yaml#/components/schemas/ReceivedAt'
    InboundMessageBatch:
      type: object
      properties:
        inboundMessages:
          type: array
          items:
            $ref: '#/components/schemas/InboundMessage'
          minimum: 1
          maximum: 1000
      required:
        - inboundMessages

  securitySchemes:
    oAuthAuthorization:
      type: oauth2
      description: OAuth client credentials grant type authorization
      flows:
        clientCredentials:
          tokenUrl: https://anrjzyscq.accounts400.ondemand.com/oauth2/token
          scopes: {}
security:
  - oAuthAuthorization: []
